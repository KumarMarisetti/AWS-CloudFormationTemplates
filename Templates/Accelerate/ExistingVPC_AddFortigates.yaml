---
AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template that adds Fortigates and NLBs to an Existing
  VPC w/ DNS Prefixes to both ELBs
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: VPC Configuration
      Parameters:
      - VPCID
      - AZForFirewall1
      - AZForFirewall2
      - SubnetID1
      - SubnetID2
      - SubnetID3
      - SubnetID4
    - Label:
        default: FortiGate Instance Configuration
      Parameters:
      - FortiGateEC2Type
      - KeyPair
      - CIDRForFortiGateAccess
      - S3ConfigBucket
      - S3ConfigObject
      - S3ConfigObjectB
    - Label:
        default: ELB Configuration
      Parameters:
      - HealthCheckPort
      - DomainName
      - FGTDNSPrefix
Parameters:
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: Enter the VPC that you want to use the FortiGates in
  AZForFirewall1:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
    Description: Enter the AZ for the primary firewall
  AZForFirewall2:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1c
    Description: Enter the AZ for the secondary firewall
  SubnetID1:
    Type: AWS::EC2::Subnet::Id
    Description: Enter the value of the Public Subnet 1
  SubnetID2:
    Type: AWS::EC2::Subnet::Id
    Description: Enter the value of the Private Subnet 1
  SubnetID3:
    Type: AWS::EC2::Subnet::Id
    Description: Enter the value of the Public Subnet 2
  SubnetID4:
    Type: AWS::EC2::Subnet::Id
    Description: Enter the value of the Private Subnet 2
  FortiGateEC2Type:
    Type: String
    Default: m3.medium
    AllowedValues:
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    Description: Enter the instance type and size that you want for the AutoScaled
      FortiGates
  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Enter the keypair that you want to associate with the launch of the
      Fortigate
  CIDRForFortiGateAccess:
    Type: String
    Description: Enter the CIDR from which FortiGate instances needs to be accessed
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  S3ConfigBucket:
    Type: String
    Default: accelerate-config
    Description: S3 Bucket for Fortigate Config Object
  S3ConfigObjectB:
    Type: String
    Default: current-b.conf
    Description: Fortigate Configuration Object File
  S3ConfigObject:
    Type: String
    Default: current.conf
    Description: Fortigate Configuration Object File
  HealthCheckPort:
    Type: Number
    Default: '541'
    Description: Enter the Health Check port used port for the external ELB
  DomainName:
    Type: String
    Default: fortiengineering.com
    Description: Enter the Domain Name for Route53 DNS Record Sets
  FGTDNSPrefix:
    Type: String
    Default: fortias
    Description: Enter the Prefix for Fortigate Route53 DNS Record Sets
Mappings:
  RegionMap:
    us-east-1:
      fgtodami: ami-bdc896c7
      fgtbyolami: ami-c43364be
      workerami: ami-6245d474
    us-east-2:
      fgtodami: ami-79b9921c
      fgtbyolami: ami-e4072c81
      workerami: ami-349db951
    us-west-1:
      fgtodami: ami-1c8f8f7c
      fgtbyolami: ami-918584f1
      workerami: ami-6480a504
    us-west-2:
      fgtodami: ami-8f53e7f7
      fgtbyolami: ami-56913a2e
      workerami: ami-752ab815
    ca-central-1:
      fgtodami: ami-04840160
      fgtbyolami: ami-dccd48b8
      workerami: ami-1ed16d7a
    eu-central-1:
      fgtodami: ami-c2891bad
      fgtbyolami: ami-76801019
      workerami: ami-8869bbe7
    eu-west-1:
      fgtodami: ami-693aaa10
      fgtbyolami: ami-7ce67205
      workerami: ami-dccbcfba
    eu-west-2:
      fgtodami: ami-b5bba3d1
      fgtbyolami: ami-022e3666
      workerami: ami-04c4d060
    eu-west-3:
      fgtodami: ami-9202b5ef
      fgtbyolami: ami-ff16a182
      workerami: ami-aca91fd1
    ap-southeast-1:
      fgtodami: ami-97384beb
      fgtbyolami: ami-a24532de
      workerami: ami-4f52eb2c
    ap-southeast-2:
      fgtodami: ami-1e877a7c
      fgtbyolami: ami-22bc4e40
      workerami: ami-44262f27
    ap-northeast-1:
      fgtodami: ami-2454cd42
      fgtbyolami: ami-4d31a32b
      workerami: ami-860926e1
    ap-northeast-2:
      fgtodami: ami-57822239
      fgtbyolami: ami-c7e343a9
      workerami: ami-c818caa6
    ap-south-1:
      fgtodami: ami-6cf3a703
      fgtbyolami: ami-4aefba25
      workerami: ami-16c7b479
    sa-east-1:
      fgtodami: ami-1c3f7d70
      fgtbyolami: ami-5a743736
      workerami: ami-b0d3b1dc
Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPCID
      GroupDescription: Allow All Traffic
      SecurityGroupIngress:
      - IpProtocol: "-1"
        CidrIp:
          Ref: CIDRForFortiGateAccess
  BootfromS3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  BootfromS3Policies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: root
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - s3:*
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - ec2:*
          Resource:
          - "*"
      Roles:
      - Ref: BootfromS3
  BootEC2:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: BootfromS3
  OnDemandA:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - fgtodami
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "{\n"
            - '"product"'
            - " : "
            - '"2wqkpek696qhdeo7lbbjncqli"'
            - ",\n"
            - '"bucket"'
            - " : "
            - "\""
            - Ref: S3ConfigBucket
            - "\""
            - ",\n"
            - '"region"'
            - ' : "'
            - Ref: AWS::Region
            - '"'
            - ",\n"
            - '"license"'
            - " : "
            - '"/"'
            - ",\n"
            - '"config"'
            - " : "
            - "\""
            - "/"
            - Ref: S3ConfigObject
            - "\""
            - ",\n"
            - "}"
      InstanceType:
        Ref: FortiGateEC2Type
      KeyName:
        Ref: KeyPair
      IamInstanceProfile:
        Ref: BootEC2
      DisableApiTermination: 'False'
      NetworkInterfaces:
      - NetworkInterfaceId:
          Ref: OnDemandAENI0
        DeviceIndex: '0'
      - NetworkInterfaceId:
          Ref: OnDemandAENI1
        DeviceIndex: '1'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-OnDemandA"
      - Key: Fortigate-State
        Value: Configured
      - Key: Fortigate-License
        Value: OnDemand
  OnDemandAENI0:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: eth0
      GroupSet:
      - Ref: SecurityGroup
      SourceDestCheck: 'true'
      SubnetId:
        Ref: SubnetID1
      PrivateIpAddresses:
        - PrivateIpAddress: 10.0.0.254
          Primary: 'true'
        - PrivateIpAddress: 10.0.0.253
          Primary: 'false'
        - PrivateIpAddress: 10.0.0.252
          Primary: 'false'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-OnDemandAENI0"
      - Key: Interface
        Value: eth0
  OnDemandAEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    DependsOn: OnDemandA
  OnDemandAEIPASSOCIATION:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId:
        Fn::GetAtt:
        - OnDemandAEIP
        - AllocationId
      NetworkInterfaceId:
        Ref: OnDemandAENI0
    DependsOn: OnDemandAEIP
  OnDemandAENI1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: Secondary Interface
      GroupSet:
      - Ref: SecurityGroup
      SourceDestCheck: 'false'
      SubnetId:
        Ref: SubnetID2
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-OnDemandAENI1"
  OnDemandB:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - fgtodami
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "{\n"
            - '"product"'
            - " : "
            - '"2wqkpek696qhdeo7lbbjncqli"'
            - ",\n"
            - '"bucket"'
            - " : "
            - "\""
            - Ref: S3ConfigBucket
            - "\""
            - ",\n"
            - '"region"'
            - ' : "'
            - Ref: AWS::Region
            - '"'
            - ",\n"
            - '"license"'
            - " : "
            - '"/"'
            - ",\n"
            - '"config"'
            - " : "
            - "\""
            - "/"
            - Ref: S3ConfigObjectB
            - "\""
            - ",\n"
            - "}"
      InstanceType:
        Ref: FortiGateEC2Type
      KeyName:
        Ref: KeyPair
      IamInstanceProfile:
        Ref: BootEC2
      DisableApiTermination: 'False'
      NetworkInterfaces:
      - NetworkInterfaceId:
          Ref: OnDemandBENI0
        DeviceIndex: '0'
      - NetworkInterfaceId:
          Ref: OnDemandBENI1
        DeviceIndex: '1'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-OnDemandB"
      - Key: Fortigate-State
        Value: Configured
      - Key: Fortigate-License
        Value: OnDemand
  OnDemandBENI0:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: eth0
      GroupSet:
      - Ref: SecurityGroup
      SourceDestCheck: 'true'
      SubnetId:
        Ref: SubnetID3
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-OnDemandBENI0"
      - Key: Interface
        Value: eth0
  OnDemandBEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    DependsOn: OnDemandB
  OnDemandBEIPASSOCIATION:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId:
        Fn::GetAtt:
        - OnDemandBEIP
        - AllocationId
      NetworkInterfaceId:
        Ref: OnDemandBENI0
    DependsOn: OnDemandBEIP
  OnDemandBENI1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: Secondary Interface
      GroupSet:
      - Ref: SecurityGroup
      SourceDestCheck: 'false'
      SubnetId:
        Ref: SubnetID4
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-OnDemandBENI1"
  PublicElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name:
        Fn::Join:
        - ''
        - - Ref: AWS::StackName
          - "-PublicELB"
      Scheme: internal
      Subnets:
      - Ref: SubnetID1
      - Ref: SubnetID3
      Type: network
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-PublicELB"
  PublicTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name:
        Fn::Join:
        - ''
        - - Ref: AWS::StackName
          - "-PublicTargetGroup"
      Port: 80
      Protocol: TCP
      HealthCheckProtocol: HTTP
      HealthCheckPort: 80
      TargetType: instance
      Targets:
      - Id:
          Ref: OnDemandA
        Port: 80
      - Id:
          Ref: OnDemandB
        Port: 80
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-PublicTargetGroup"
      VpcId:
        Ref: VPCID
  PublicListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: PublicTargetGroup
      LoadBalancerArn:
        Ref: PublicElasticLoadBalancer
      Port: 80
      Protocol: TCP
  RecordPublicELB:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName:
        Fn::Join:
        - ''
        - - Ref: DomainName
          - "."
      RecordSets:
      - Name:
          Fn::Join:
          - ''
          - - Ref: FGTDNSPrefix
            - "."
            - Ref: DomainName
            - "."
        Type: A
        AliasTarget:
          HostedZoneId:
            Fn::GetAtt:
            - PublicElasticLoadBalancer
            - CanonicalHostedZoneID
          DNSName:
            Fn::GetAtt:
            - PublicElasticLoadBalancer
            - DNSName
    DependsOn: PublicElasticLoadBalancer
Outputs:
  PublicElasticLoadBalancer:
    Value:
      Ref: PublicElasticLoadBalancer
    Description: Fortigate Load Balancer
  TargetGroupARN:
    Value:
      Ref: PublicTargetGroup
    Description: Public Target Group
  OnDemandAIP:
    Value: !GetAtt OnDemandA.PublicIp
    Description: Public IP of OnDemandA
  OnDemandBIP:
    Value: !GetAtt OnDemandB.PublicIp
    Description: Public IP of OnDemandB
  OnDemandAID:
    Value:
      Ref: OnDemandA
    Description: Instance ID of OnDemandA
  OnDemandBID:
    Value:
      Ref: OnDemandB
    Description: Instance ID of OnDemandB
  VPCID:
    Value:
      Ref: VPCID
    Description: VPC ID
